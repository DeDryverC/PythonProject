import curses
def main(stdscr):
    curses.noecho()
    curses.cbreak()
    curses.curs_set(0)
    stdscr.keypad(True)
    curses.initscr()
    curses.start_color()

    pos_pacman = [4, 9]
    pos_prev= [4, 10]

    score = 0

    countColl = 49
    map = 0
    x = 10
    y = 20
    map=[[0]*y for i in range(x)]
    for i in range(10):
        for j in range(20):
            if i == 0 or i == 9:
                map[i][j] = "MUR"
            if j == 0 or j == 19:
                map[i][j] = "MUR"
            if j == 1 and i != 0 and i != 9 or j == 18 and i != 0 and i != 9:
                map[i][j] = "PGN"
            if i == 1 and j != 0 and j != 19 or i == 8 and j != 0 and j != 19:
                map[i][j] = "PGN"
            map[1][1] = "PGS"
            map[1][18] = "PGS"
            map[8][18] = "PGS"
            map[8][1] = "PGS"
            map[5][10] = "FRUIT"

    stdscr.erase()


    curses.init_pair(1, curses.COLOR_CYAN, curses.COLOR_BLACK)
    curses.init_pair(2, curses.COLOR_GREEN, curses.COLOR_BLACK)
    curses.init_pair(3, curses.COLOR_YELLOW, curses.COLOR_BLACK)


    for i in range(20):
        for j in range(10):
            try:
                stdscr.addstr(0, i, "#")  # Murs
                stdscr.addstr(j, 19, "#")
                stdscr.addstr(9, i, "#")
                stdscr.addstr(j, 0, "#")

            except:
                pass
    for k in range(18):
        for l in range(8):
            try:
                stdscr.addstr(1, k + 1, "*", curses.color_pair(1))  # Pac Gommes de base
                stdscr.addstr(l + 1, 18, "*", curses.color_pair(1))
                stdscr.addstr(8, k + 1, "*", curses.color_pair(1))
                stdscr.addstr(l + 1, 1, "*", curses.color_pair(1))
                stdscr.addstr(1, 1, "x", curses.color_pair(1))  # Pac Gommes sp√©ciale
                stdscr.addstr(1, 18, "x", curses.color_pair(1))
                stdscr.addstr(8, 1, "x", curses.color_pair(1))
                stdscr.addstr(8, 18, "x", curses.color_pair(1))
                stdscr.addstr(5, 10, "x", curses.color_pair(2))  # Fruit
                stdscr.addstr(pos_pacman[0], pos_pacman[1], "o", curses.color_pair(3))  # Pac Man
            except:
                pass

    while True:
        stdscr.delch(pos_prev[0], pos_prev[1])
        stdscr.insstr(pos_prev[0], pos_prev[1], " ")
        stdscr.addstr(pos_pacman[0], pos_pacman[1], "o", curses.color_pair(3))  # Pac Man
        stdscr.addstr(1, 22, "Score: ", curses.color_pair(3))
        stdscr.addstr(1, 29, str(score), curses.color_pair(3))
        stdscr.refresh()

        pos_prev[0] = pos_pacman[0]
        pos_prev[1] = pos_pacman[1]


        if countColl == 0:
            stdscr.erase()
            gg = "You won ! Congratz"
            endmessage= "Press Q to quit the game"
            stdscr.addstr(1, 1, gg, curses.color_pair(3))
            stdscr.addstr(2, 1, "Score: ", curses.color_pair(3))
            stdscr.addstr(2, 7, str(score), curses.color_pair(3))
            stdscr.addstr(3, 1, endmessage, curses.color_pair(3))
            stdscr.refresh()

            key = stdscr.getch()

            if key == ord('q'):
                break

        key = stdscr.getch()
        if key == ord('z'):
            if map[pos_pacman[0]-1][pos_pacman[1]] == "MUR":
                pass
            elif map[pos_pacman[0]-1][pos_pacman[1]] == "PGN":
                pos_pacman[0] = pos_pacman[0]-1
                countColl = countColl -1
                score= score+100
                map[pos_pacman[0]][pos_pacman[1]] = 0
            elif map[pos_pacman[0]-1][pos_pacman[1]] == "PGS":
                pos_pacman[0] = pos_pacman[0] - 1
                countColl = countColl - 1
                score = score + 200
                map[pos_pacman[0]][pos_pacman[1]] = 0
            elif map[pos_pacman[0]-1][pos_pacman[1]] == "FRUIT":
                pos_pacman[0] = pos_pacman[0] - 1
                countColl = countColl - 1
                score = score + 500
                map[pos_pacman[0]][pos_pacman[1]] = 0
            elif map[pos_pacman[0]-1][pos_pacman[1]] == 0:
                pos_pacman[0] = pos_pacman[0] - 1

            stdscr.refresh()

        elif key == ord('s'):
            if map[pos_pacman[0]+1][pos_pacman[1]] == "MUR":
                pass
            elif map[pos_pacman[0]+1][pos_pacman[1]] == "PGN":
                pos_pacman[0] = pos_pacman[0] + 1
                countColl = countColl - 1
                score = score + 100
                map[pos_pacman[0]][pos_pacman[1]] = 0
            elif map[pos_pacman[0]+1][pos_pacman[1]] == "PGS":
                pos_pacman[0] = pos_pacman[0] + 1
                countColl = countColl - 1
                score = score + 200
                map[pos_pacman[0]][pos_pacman[1]] = 0
            elif map[pos_pacman[0]+1][pos_pacman[1]] == "FRUIT":
                pos_pacman[0] = pos_pacman[0] + 1
                countColl = countColl - 1
                score = score + 500
                map[pos_pacman[0]][pos_pacman[1]] = 0
            elif map[pos_pacman[0]+1][pos_pacman[1]] == 0:
                pos_pacman[0] = pos_pacman[0] + 1

            stdscr.refresh()

        elif key == ord('q'):

            if map[pos_pacman[0]][pos_pacman[1]-1] == "MUR":
                pass
            elif map[pos_pacman[0]][pos_pacman[1]-1] == "PGN":
                pos_pacman[1] = pos_pacman[1] - 1
                countColl = countColl - 1
                score = score + 100
                map[pos_pacman[0]][pos_pacman[1]] = 0
            elif map[pos_pacman[0]][pos_pacman[1]-1] == "PGS":
                pos_pacman[1] = pos_pacman[1] - 1
                countColl = countColl - 1
                score = score + 200
                map[pos_pacman[0]][pos_pacman[1]] = 0
            elif map[pos_pacman[0]][pos_pacman[1]-1] == "FRUIT":
                pos_pacman[1] = pos_pacman[1] - 1
                countColl = countColl - 1
                score = score + 500
                map[pos_pacman[0]][pos_pacman[1]] = 0
            elif map[pos_pacman[0]][pos_pacman[1]-1] == 0:
                pos_pacman[1] = pos_pacman[1] - 1

            stdscr.refresh()

        elif key == ord('d'):
            if map[pos_pacman[0]][pos_pacman[1]+1] == "MUR":
                pass
            elif map[pos_pacman[0]][pos_pacman[1]+1] == "PGN":
                pos_pacman[1] = pos_pacman[1] + 1
                countColl = countColl - 1
                score = score + 100
                map[pos_pacman[0]][pos_pacman[1]] = 0
            elif map[pos_pacman[0]][pos_pacman[1]+1] == "PGS":
                pos_pacman[1] = pos_pacman[1] + 1
                countColl = countColl - 1
                score = score + 200
                map[pos_pacman[0]][pos_pacman[1]] = 0
            elif map[pos_pacman[0]][pos_pacman[1]+1] == "FRUIT":
                pos_pacman[1] = pos_pacman[1] + 1
                countColl = countColl - 1
                score = score + 500
                map[pos_pacman[0]][pos_pacman[1]] = 0

            elif map[pos_pacman[0]][pos_pacman[1]+1] == 0:
                pos_pacman[1] = pos_pacman[1] + 1
            stdscr.refresh()


        elif key == ord('p'):
            countColl = 0



curses.wrapper(main)

