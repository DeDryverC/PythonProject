import unittest

from PythonProject.Module_PacDuel.MappingGen import Map


class TestsMappingGen(unittest.TestCase):
    """
    author: Cedric de Dryver
    description: classe de tests pour MappingGen
    """
    def tests_get_score(self):
        map_array = Map("data_tests/test_gen_map.txt", 16, 11)
        map_array.gen_map()

        expected_array = [
            ['#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#',
             '#', '#'],
            ['#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.',
             '.', '#'],
            ['#', '.', '#', '#', '#', ' ', '#', '#', '#', '.', '.', '#', '.', '.', '#', '#', '#', ' ', '#', '#', '#',
             '.', '#'],
            ['#', '.', '#', '#', '#', ' ', '#', '#', '.', '.', '.', '.', '.', '.', '.', '#', '#', ' ', '#', '#', '#',
             '.', '#'],
            ['#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '#', '#', '#', '#', '.', '.', '.', '.', '.', '.', '.',
             '.', '#'],
            ['#', '.', '#', '#', '#', '.', '#', '.', '.', '.', '.', '#', '.', '.', '.', '.', '#', '.', '#', '#', '#',
             '.', '#'],
            ['#', '.', '.', '.', '.', '.', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', '#', '.', '.', '.', '.',
             '.', '#'],
            ['#', '#', '#', '#', '#', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '#', '#', '#',
             '#', '#'],
            [' ', ' ', ' ', '#', '#', '.', '#', '.', '#', '#', ' ', ' ', ' ', '#', '#', '.', '#', '.', '#', '#'],
            ['#', '#', '#', '#', '#', '.', '#', '.', '#', ' ', ' ', ' ', ' ', ' ', '#', '.', '#', '.', '#', '#', '#',
             '#', '#'],
            ['#', '#', '#', '#', '#', '.', '.', '.', '#', ' ', ' ', 'M', ' ', ' ', '#', '.', '.', '.', '#', '#', '#',
             '#', '#'],
            ['#', '#', '#', '#', '#', '.', '#', '.', '#', ' ', ' ', ' ', ' ', ' ', '#', '.', '#', '.', '#', '#', '#',
             '#', '#'],
            [' ', ' ', ' ', '#', '#', '.', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '.', '#', '.', '#', '#'],
            ['#', '#', '#', '#', '#', '.', '#', '.', '.', '.', '.', '^', '.', '.', '.', '.', '#', '.', '#', '#', '#',
             '#', '#'],
            ['#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '#', '#', '#', '#', '.', '.', '.', '.', '.', '.', '.',
             '.', '#'],
            ['#', '.', '#', '#', '#', ' ', '#', '#', '.', '.', '.', '#', '.', '.', '.', '#', '#', ' ', '#', '#', '#',
             '.', '#'],
            ['#', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', 'o', '.', '.', '.', '.', '.', '.', '#', '.', '.',
             '.', '#'],
            ['#', '#', '#', ' ', '#', ' ', '#', '.', '#', '#', '#', '#', '#', '#', '#', '.', '#', ' ', '#', '.', '#',
             '#', '#'],
            ['#', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '#', '.', '.', '.', '.', '#', '.', '.', '.', '.',
             '.', '#'],
            ['#', '.', '#', '#', '#', '#', '#', '#', '#', '#', '.', '#', '.', '#', '#', '#', '#', '#', '#', '#', '#',
             '.', '#'],
            ['#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',
             '.', '#'],
            ['#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#',
             '#']]

        self.assertEqual(map_array.map_ar, expected_array)


if __name__ == "__main__":
    unittest.main()
